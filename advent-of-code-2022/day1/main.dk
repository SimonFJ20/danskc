
funktion tegn_er_tal(t: tegn) -> boolsk
    returner t >= '0' og t <= '9'
slut

funktion analyser_tal(input: tekst, i: heltal[]) -> heltal
    lad tal_tegn = [input[i[0]]]
    i[0] += 1
    mens i[0] < tekst_længde(input) og tegn_er_tal(input[i[0]]) så
        tegnliste_tilføj(tal_tegn, input[i[0]])
        i[0] += 1
    slut
    lad tal_tekst = tegnliste_til_tekst(tal_tegn)
    lad tal = tekst_til_heltal(tal_tekst)
    returner tal
slut

funktion grupper_tal(input: tekst) -> heltal[]
    lad i: heltal[] = [0]
    lad grupper: heltal[] = []
    lad nuværende_gruppe: heltal[] = []
    lad sidste_var_tom: boolsk = falsk
    mens i[0] < tekst_længde(input) så
        hvis tegn_er_tal(input[i[0]]) så
            hvis sidste_var_tom så
                lad sum: heltal = 0
                lad j: heltal = 0
                mens j < heltalliste_længde(nuværende_gruppe) så
                    sum += nuværende_gruppe[j]
                    j += 1
                slut
                heltalliste_tilføj(grupper, sum)
                nuværende_gruppe = []
                sidste_var_tom = falsk
            slut
            heltalliste_tilføj(nuværende_gruppe, analyser_tal(input, i))
            hvis i[0] < tekst_længde(input) og input[i[0]] == '\n' så
                i[0] += 1
            slut
        ellers hvis input[i[0]] == '\n' så
            sidste_var_tom = sand
            i[0] += 1
        ellers
            fejl("uhåndterbart tegn")
        slut
    slut
    returner grupper
slut

funktion klon_liste(liste: heltal[]) -> heltal[]
    lad klon: heltal[] = []
    lad i = 0
    mens i < heltalliste_længde(liste) så
        heltalliste_tilføj(klon, liste[i])
        i += 1
    slut
    returner klon
slut

funktion heltalliste_byt(liste: heltal[], a: heltal, b: heltal) -> heltal
    lad temp = liste[a]
    liste[a] = liste[b]
    liste[b] = temp
    returner 0
slut

funktion sorter_heltalliste(liste: heltal[]) -> heltal[]
    lad klon = klon_liste(liste)
    lad i = 0;
    mens i < heltalliste_længde(liste) - 2 så
        lad j = heltalliste_længde(liste) - 1;
        mens j >= 1 så
            hvis klon[j - 1] > klon[j] så
                heltalliste_byt(klon, j - 1, j)
            slut
            j -= 1
        slut
        i += 1
    slut
    returner klon
slut

funktion begynd() -> heltal
    lad input = læs_fil("advent-of-code-2022/day1/input.txt")
    lad grupper = grupper_tal(input)
    lad sorteret_grupper = sorter_heltalliste(grupper)

    skriv("How many total Calories is that Elf carrying?\n> ")
    skriv_heltal(sorteret_grupper[-1])
    skriv("\nHow many Calories are those Elves carrying in total?\n> ")
    skriv_heltal(
        sorteret_grupper[-1]
        + sorteret_grupper[-2]
        + sorteret_grupper[-3]
    )
    skriv("\n")
    
    returner 0
slut
