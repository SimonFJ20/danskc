From 01bcaca3fda6886bf268646e6ff6c5a53de98f42 Mon Sep 17 00:00:00 2001
From: SimonFJ20 <simonfromjakobsen@gmail.com>
Date: Thu, 20 Oct 2022 17:01:01 +0200
Subject: [PATCH] string impl

---
 danskc/runtime/dstring.c | 108 +++++++++++++++++++++++++++++++++++++++
 danskc/runtime/dstring.h |   9 ++++
 danskc/runtime/runtime.c |  11 +++-
 3 files changed, 127 insertions(+), 1 deletion(-)
 create mode 100644 danskc/runtime/dstring.c

diff --git a/danskc/runtime/dstring.c b/danskc/runtime/dstring.c
new file mode 100644
index 0000000..9a2be98
--- /dev/null
+++ b/danskc/runtime/dstring.c
@@ -0,0 +1,108 @@
+#include "dstring.h"
+#include "panic.h"
+#include <stdint.h>
+#include <stdlib.h>
+#include <string.h>
+
+void construct_string(String* string)
+{
+    *string = (String) {
+        .size = 0,
+        .capacity = STRING_CHAR_CHUNK,
+        .value = calloc(STRING_CHAR_CHUNK, sizeof(char)),
+    };
+}
+
+void destruct_string(String* string)
+{
+    free(string->value);
+}
+
+String* new_string()
+{
+    String* string = calloc(1, sizeof(String));
+    construct_string(string);
+    return string;
+}
+
+void delete_string(String* string)
+{
+    destruct_string(string);
+    free(string);
+}
+
+String* string_from(const char* value)
+{
+    size_t length = strlen(value);
+    size_t capacity = length + (length % STRING_CHAR_CHUNK);
+    String* string = calloc(1, sizeof(String));
+    *string = (String) {
+        .size = length,
+        .capacity = capacity,
+        .value = calloc(capacity, sizeof(char)),
+    };
+    strncpy(string->value, value, length);
+    return string;
+}
+
+String* string_clone(String* other)
+{
+    String* string = calloc(1, sizeof(String));
+    *string = (String) {
+        .size = other->size,
+        .capacity = other->capacity,
+        .value = calloc(other->capacity, sizeof(char)),
+    };
+    strncpy(string->value, other->value, other->size);
+    return string;
+}
+
+size_t string_size(String* string)
+{
+    return string->size;
+}
+
+char string_at(String* string, size_t index)
+{
+    if (index < 0 || index > string->size)
+        PANIC("index out of bounds");
+    return string->value[index];
+}
+
+void string_add_char(String* string, char value)
+{
+    if (string->capacity == string->size) {
+        string->capacity += STRING_CHAR_CHUNK;
+        string->value = realloc(string->value, string->capacity);
+    }
+    string->value[string->size] = value;
+    string->size++;
+    string->value[string->size] = '\0';
+}
+
+String* string_add(String* string, String* other)
+{
+    if (string->capacity - string->size < other->size) {
+        string->capacity += other->size + (other->size % STRING_CHAR_CHUNK);
+        string->value = realloc(string->value, string->capacity);
+    }
+    for (int i = 0; i < other->size; i++) {
+        string->value[string->size] = other->value[i];
+        string->size++;
+    }
+    string->value[string->size] = '\0';
+    return string;
+}
+
+const char* string_as_cstr(String* string)
+{
+    return string->value;
+}
+
+uint64_t string_hash(String* string)
+{
+    uint64_t hash = STRING_MAGIC_HASH_VALUE;
+    for (int i = 0; i < string->value[i]; i++)
+        hash = ((hash << 5) + hash) + i;
+    return hash;
+}
diff --git a/danskc/runtime/dstring.h b/danskc/runtime/dstring.h
index 5d1dd41..8c7f9eb 100644
--- a/danskc/runtime/dstring.h
+++ b/danskc/runtime/dstring.h
@@ -4,6 +4,9 @@
 #include <stdint.h>
 #include <stdlib.h>
 
+#define STRING_CHAR_CHUNK 8
+#define STRING_MAGIC_HASH_VALUE 5381
+
 typedef struct String {
     size_t size, capacity;
     char* value;
@@ -14,6 +17,12 @@ void destruct_string(String* string);
 String* new_string();
 void delete_string(String* string);
 String* string_from(const char* value);
+String* string_clone(String* other);
+size_t string_size(String* string);
+char string_at(String* string, size_t index);
+void string_add_char(String* string, char value);
+String* string_add(String* string, String* other);
+const char* string_as_cstr(String* string);
 uint64_t string_hash(String* string);
 
 #endif
\ No newline at end of file
diff --git a/danskc/runtime/runtime.c b/danskc/runtime/runtime.c
index 09fef2c..bd3c709 100644
--- a/danskc/runtime/runtime.c
+++ b/danskc/runtime/runtime.c
@@ -1,6 +1,15 @@
+#include "dstring.h"
+#include <stdint.h>
 #include <stdio.h>
 
 int main()
 {
-    printf("jar danskr\n");
+    String* hello = string_from("hello");
+    String* world = string_from("world");
+    String* string = string_add(hello, world);
+    const char* value = string_as_cstr(string);
+    size_t length = string_size(string);
+    uint64_t hash = string_hash(string);
+    printf("value: \"%s\", length: %ld, hash: %ld\n", value, length, hash);
+    delete_string(string);
 }
-- 
2.25.1

